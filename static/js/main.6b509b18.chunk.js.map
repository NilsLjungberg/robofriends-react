{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","name","email","className","alt","src","CardList","robots","map","user","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAeeA,EAbF,SAACC,GACV,IAAOC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MACjB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,6BAAKC,IACL,4BAAIC,WCWLI,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BACMA,EAAOC,KAAI,SAACC,EAAMT,GACpB,OACI,cAAC,EAAD,CAEIA,GAAIO,EAAOP,GAAIA,GACfC,KAAMM,EAAOP,GAAIC,KACjBC,MAAOK,EAAOP,GAAIE,OAHbF,SCMVU,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACA,qBAAKR,UAAU,KAAf,SACI,uBACAA,UAAU,uCACVS,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCCJI,EARA,SAAChB,GACZ,OACI,qBAAKiB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,SAA3C,SACKnB,EAAMoB,YCwCJC,G,wDAtCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAAAC,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACTpB,OAAQ,GACRiB,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEhB,OAAQyB,S,oBAO/C,WAAU,IAAD,OACCC,EAAiBC,KAAKP,MAAMpB,OAAO4B,QAAO,SAAAC,GAC5C,OAAOA,EAAMnC,KAAKoC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAEpE,OAAiC,IAA7BH,KAAKP,MAAMpB,OAAOgC,OACX,oBAAIpC,UAAU,KAAd,wBAGP,sBAAKA,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWQ,aAAeuB,KAAKb,iBAC/B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUd,OAAS0B,a,GA/BrBO,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACT,cAAC,EAAD,IACAC,SAASC,eAAe,SAKxBX,M","file":"static/js/main.6b509b18.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n    const {id, name, email } = props;\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            { robots.map((user, id) => {\n            return (\n                <Card\n                    key={id}\n                    id={robots[id].id}\n                    name={robots[id].name}\n                    email={robots[id].email}\n        />\n        );\n    }) }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n    <div className='p2'>\n        <input\n        className='pa3 ma2 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={ searchChange }\n        />\n    </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll', height: '400px'}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }));\n        }\n\n    onSearchChange = event => {\n        this.setState({ searchfield: event.target.value });\n    }\n\n    render() {\n        const filteredRobots = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        })\n        if (this.state.robots.length === 0) {\n            return <h1 className='tc'>Loading...</h1>\n        } else {\n        return (\n            <div className='tc'>\n                <h1 className='f1'>Robofriends</h1>\n                <SearchBox searchChange={ this.onSearchChange }/>\n                <Scroll>\n                    <CardList robots={ filteredRobots } />\n                </Scroll>\n            </div>\n        );\n        }\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n<App />, \ndocument.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}